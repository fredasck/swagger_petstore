{"name": "test_get_pet_id_status_code_is_400[—Ç–µ—Å—Ç-405]", "status": "failed", "statusDetails": {"message": "AssertionError: Status code isn't ok 400\nassert 400 == 405\n +  where 400 = <Response [400]>.status_code\n +    where <Response [400]> = get_pet_by_id('—Ç–µ—Å—Ç')", "trace": "test_input = '—Ç–µ—Å—Ç', expected_result = 405\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.parametrize(\"test_input, expected_result\",\n                             [('test', 400), ('—Ç–µ—Å—Ç', 405), ('–Å', 400), ('~', 400), ('‚Ç¥', 400), ('\\'', 400),\n                              ('$', 400), ('&', 400), ('^', 400), ('*', 400), ('(', 400),\n                              (')', 400), ('-', 400), ('_', 400), ('=', 400), ('+', 400), ('[', 400), (']', 400),\n                              ('{', 400), ('}', 400), (':', 400), ('<', 400), ('>', 400), (',', 400),\n                              ('|', 400), ('‚Ä†', 400), ('¬Æ', 400), ('¬ø', 400), ('‚úÖ', 400), ('üòù', 400)])\n    def test_get_pet_id_status_code_is_400(test_input, expected_result):\n>       assert get_pet_by_id(\n            test_input).status_code == expected_result, f\"Status code isn\\'t ok {get_pet_by_id(test_input).status_code}\"\nE       AssertionError: Status code isn't ok 400\nE       assert 400 == 405\nE        +  where 400 = <Response [400]>.status_code\nE        +    where <Response [400]> = get_pet_by_id('—Ç–µ—Å—Ç')\n\ntest_pet_store_parametrize.py:90: AssertionError"}, "parameters": [{"name": "test_input", "value": "'—Ç–µ—Å—Ç'"}, {"name": "expected_result", "value": "405"}], "start": 1612196536514, "stop": 1612196537697, "uuid": "9773ca0f-30a4-422b-83c5-f0d1a6922511", "historyId": "d131edfe7743f34c9068bc9890b68f12", "testCaseId": "8620f945c47eb562c823e61b2a8eebc8", "fullName": "test_pet_store_parametrize#test_get_pet_id_status_code_is_400", "labels": [{"name": "severity", "value": "normal"}, {"name": "suite", "value": "test_pet_store_parametrize"}, {"name": "host", "value": "Fred"}, {"name": "thread", "value": "5104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pet_store_parametrize"}]}